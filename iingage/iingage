#!/bin/bash

# IIngage - A simple irc bot based on ii
# (C) Chris Dorman, 2014 - Some rights reserved
# Licensed under the GNU General Public License version 3

SERVER="irc.freenode.net" 	# Irc channel
NAME="users's bot" 		# Bots real name
NICK="ircbot" 			# Bot nickname
CHANNEL="#channel" 		# Irc channel
PORT="6667" 			# Irc server port
OWNER="username"		# The bot owner. (Only the owner game make him generate logs and stop)
HTDOCPATH="/srv/www" 		# Web server path were the html generated logs are saved.
VERSION="0.1.0" 		# IIngage version
WEBSERVER_URL="http://yourwebsite.com"	# Your website url or IP that people can find the generated html logs at.

runLoop() {
	DATE=`date +%m-%d-%Y`
	echo "-!- Starting IIngage" >> log-$SERVER-$DATE.txt
	echo "-!- Starting IIngage"
	ii -s $SERVER -p $PORT -n $NICK -f "$NAME" -i . &
	sleep 6
	echo "/j $CHANNEL" > $SERVER/in
	
	govar=1
	while [ "$govar" != "0" ]; do
		DATE=`date +%m-%d-%Y`
		
		# Generate HTML Logs
		if grep -iw "$NICK, gen html" "$SERVER/$CHANNEL/out"; then
			HEADER="<html>
			<head>
				<title>IIngage - $DATE - $SERVER - $CHANNEL</title>
				<style type='text/css'>
				body {
					background-color: #303030;
					color: #ededed;
					font-size: 14px;
					font-family: sans-serif;
				}
				
				</style>
			</head>
			<body>
			<div style='font-weight: bold; font-size: 24px; text-align: center;'>$SERVER - $CHANNEL - $DATE</div>
			<div style='max-width: 860px; padding: 5px; margin: auto; border: solid 1px #0080ff;'>
			<pre>
			"
			FOOTER="
			</pre>
			</div>
			<div style='text-align: center; font-size: 11px;'>Generated by IIngage $VERSION</div>
			</body>
			</html>
			"
			GETLINE=`grep -iw "$NICK, gen html" "$SERVER/$CHANNEL/out"`
			GETOWNER=`echo $GETLINE | cut -d " " -f 3`
			if [ "$GETOWNER" != "<$OWNER>" ]; then
				echo "-!- $GETOWNER is not set as owner, not generating HTML document!" >> $SERVER/$CHANNEL/in
				echo "-!- $GETOWNER is not set as owner, not generating HTML document!" >> log-$SERVER-$DATE.txt
			else
				echo "-!- IIngage generating HTML document..." >> $SERVER/$CHANNEL/in
				echo "$HEADER" > $HTDOCPATH/$DATE.html
				cp log-$SERVER-$DATE.txt gen.txt
				sed -i "s/>/\&gt;/g" gen.txt
				sed -i "s/</\&lt;/g" gen.txt
				echo "`cat gen.txt`" >> $HTDOCPATH/$DATE.html
				rm gen.txt
				echo "$FOOTER" >> $HTDOCPATH/$DATE.html
				echo "-!- Generated HTML document! $WEBSERVER_URL/$DATE.html" >> $SERVER/$CHANNEL/in
				echo "-!- Generated HTML document, $DATE" >> log-$SERVER-$DATE.txt
			fi
		fi
	
		# Check server status
		if grep -iw "$NICK, up" "$SERVER/$CHANNEL/out"; then
			GETLINE=`grep -iw "$NICK, up" "$SERVER/$CHANNEL/out"`
			GETSITE=`echo $GETLINE | cut -d " " -f 6`
			echo "-!- Pinging $GETSITE" >> $SERVER/$CHANNEL/in
			ping -c 3 $GETSITE
			if [ $? -eq  0 ]; then
				echo "-!- $GETSITE is online!" >> $SERVER/$CHANNEL/in
				echo "-!- $GETSITE is online!" >> log-$SERVER-$DATE.txt
			else
				echo "-!- $GETSITE is offline!" >> $SERVER/$CHANNEL/in
				echo "-!- $GETSITE is offline!" >> log-$SERVER-$DATE.txt
			fi
		fi
		
		# Slap <user> with a fish
		if grep -iw "$NICK, eat" "$SERVER/$CHANNEL/out"; then
			GETLINE=`grep -iw "$NICK, eat" "$SERVER/$CHANNEL/out"`
			GETUSER=`echo $GETLINE | cut -d " " -f 6`
			echo "Nom nom nom, $GETUSER is yummy :3" >> $SERVER/$CHANNEL/in
		fi
		
		# Check host CPU load
		if grep -iw "$NICK, server load" "$SERVER/$CHANNEL/out"; then
			UPTIMECMD="`uptime | sed -e "s/.*load average: \(.*\...\), \(.*\...\), \(.*\...\)/\1/" -e "s/ //g"`"
			echo "-!- Server load: $UPTIMECMD" >> $SERVER/$CHANNEL/in
			echo "-!- Server load: $UPTIMECMD" >> log-$SERVER-$DATE.txt
		fi
		
		# Log new messages
		if [ -s $SERVER/$CHANNEL/out ]; then
			echo "`cat $SERVER/$CHANNEL/out`" >> log-$SERVER-$DATE.txt
		fi
		
		# Stop Iingage
		if grep -iw "$NICK, die" "$SERVER/$CHANNEL/out"; then
			GETLINE=`grep -iw "$NICK, die" "$SERVER/$CHANNEL/out"`
			GETOWNER=`echo $GETLINE | cut -d " " -f 3`
			if [ "$GETOWNER" != "<$OWNER>" ]; then
				echo "-!- $GETOWNER is not set as owner, not stopping!" >> $SERVER/$CHANNEL/in
				echo "-!- $GETOWNER is not set as owner, not stopping!" >> log-$SERVER-$DATE.txt
			else
				echo "-!- IIngage is stopping!" >> $SERVER/$CHANNEL/in
				echo "/quit" > $SERVER/in
				echo "-!- Stopping IIngage..." >> log-$SERVER-$DATE.txt
				cp /dev/null $SERVER/$CHANNEL/out
				exit 0
			fi
		fi
		
		cp /dev/null $SERVER/$CHANNEL/out
		sleep 1
	done
}

case $1 in 
	start) runLoop;;
esac

